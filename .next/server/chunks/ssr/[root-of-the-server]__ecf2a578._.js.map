{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/google-genai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,6KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/analyze-spending.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Provides AI-powered analysis of spending habits.\n *\n * - analyzeSpending - A function that analyzes a list of transactions.\n * - AnalyzeSpendingInput - The input type for the analyzeSpending function.\n * - AnalyzeSpendingOutput - The return type for the analyzeSpending function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport type { Transaction } from '@/lib/types';\n\nconst TransactionSchema = z.object({\n  id: z.string(),\n  date: z.string(),\n  description: z.string(),\n  amount: z.number(),\n  type: z.enum(['income', 'expense']),\n  category: z.string(),\n});\n\nconst AnalyzeSpendingInputSchema = z.object({\n  transactions: z.array(TransactionSchema).describe('List of recent transactions.'),\n  totalIncome: z.number().describe('Total income for the period.'),\n  totalExpenses: z.number().describe('Total expenses for the period.'),\n});\nexport type AnalyzeSpendingInput = z.infer<typeof AnalyzeSpendingInputSchema>;\n\n\nconst AnalyzeSpendingOutputSchema = z.object({\n  insights: z.array(z.string()).describe('A list of 2-3 short, actionable insights based on the spending data.'),\n  cashflowMessage: z.string().describe('A brief, encouraging message about the user\\'s cash flow status.'),\n});\nexport type AnalyzeSpendingOutput = z.infer<typeof AnalyzeSpendingOutputSchema>;\n\nexport async function analyzeSpending(\n  input: AnalyzeSpendingInput\n): Promise<AnalyzeSpendingOutput> {\n  return analyzeSpendingFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'analyzeSpendingPrompt',\n  input: { schema: AnalyzeSpendingInputSchema },\n  output: { schema: AnalyzeSpendingOutputSchema },\n  prompt: `Anda adalah seorang penasihat keuangan yang ramah dan memberi semangat untuk Gen Z dan orang tua yang sibuk.\nTujuan Anda adalah memberikan saran yang sederhana dan dapat ditindaklanjuti untuk membantu pengguna mengelola arus kas mereka tanpa stres. Hindari jargon yang rumit.\nJaga agar umpan balik Anda tetap positif dan fokus pada langkah-langkah kecil yang dapat dicapai.\n\nAnalisis transaksi terkini dan ringkasan keuangan pengguna.\n\n- Total Pemasukan: {{{totalIncome}}}\n- Total Pengeluaran: {{{totalExpenses}}}\n- Transaksi:\n{{#each transactions}}\n- {{{description}}} ({{category}}): Rp{{{amount}}} pada {{date}}\n{{/each}}\n\nBerdasarkan data ini, berikan:\n1.  **cashflowMessage**: Ringkasan satu kalimat tentang arus kas mereka. Jika positif, berikan semangat. Jika negatif, berikan dorongan yang lembut dan optimis untuk perbaikan.\n2.  **daftar insights**: 2 hingga 3 wawasan singkat (masing-masing satu kalimat), yang dapat ditindaklanjuti. Fokus pada kategori pengeluaran terbesar atau area potensial untuk penghematan. Sajikan sebagai tips yang membantu, bukan kritik.\n\nContoh Output:\n{\n  \"cashflowMessage\": \"Anda berada di posisi yang bagus dengan lebih banyak pemasukan daripada pengeluaran bulan ini!\",\n  \"insights\": [\n    \"Anda hebat dalam mengelola pengeluaran 'Restoran' Anda.\",\n    \"Sebagian besar pengeluaran Anda adalah untuk 'Belanja', mungkin lain kali bisa mencari diskon?\",\n    \"Pertimbangkan untuk menetapkan anggaran kecil untuk 'Hiburan' agar lebih mudah dilacak.\"\n  ]\n}\n`,\n});\n\nconst analyzeSpendingFlow = ai.defineFlow(\n  {\n    name: 'analyzeSpendingFlow',\n    inputSchema: AnalyzeSpendingInputSchema,\n    outputSchema: AnalyzeSpendingOutputSchema,\n  },\n  async input => {\n    // Don't call the AI if there are no expenses\n    if (input.totalExpenses === 0) {\n      return {\n        cashflowMessage: \"Anda belum mencatat pengeluaran apa pun. Setelah Anda melakukannya, saya bisa memberikan beberapa wawasan!\",\n        insights: [],\n      };\n    }\n    \n    const { output } = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAGA,MAAM,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM;IACrB,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;IAChB,MAAM,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAU;KAAU;IAClC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;AACpB;AAEA,MAAM,6BAA6B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,cAAc,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,mBAAmB,QAAQ,CAAC;IAClD,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACrC;AAIA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,UAAU,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IACvC,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACvC;AAGO,eAAe,gBACpB,KAA2B;IAE3B,OAAO,oBAAoB;AAC7B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAE,QAAQ;IAA2B;IAC5C,QAAQ;QAAE,QAAQ;IAA4B;IAC9C,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BX,CAAC;AACD;AAEA,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACvC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,6CAA6C;IAC7C,IAAI,MAAM,aAAa,KAAK,GAAG;QAC7B,OAAO;YACL,iBAAiB;YACjB,UAAU,EAAE;QACd;IACF;IAEA,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAChC,OAAO;AACT;;;IAxDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-budget-feedback.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Generates feedback messages for the user's budget status.\n *\n * - generateBudgetFeedback - A function that returns a feedback message.\n * - GenerateBudgetFeedbackInput - The input type for the function.\n * - GenerateBudgetFeedbackOutput - The return type for the function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\n\nconst GenerateBudgetFeedbackInputSchema = z.object({\n  status: z.enum(['on_track', 'approaching_limit', 'at_limit']).describe(\"The user's current budget status.\"),\n});\nexport type GenerateBudgetFeedbackInput = z.infer<typeof GenerateBudgetFeedbackInputSchema>;\n\nconst GenerateBudgetFeedbackOutputSchema = z.object({\n  feedback: z.string().describe('A single, friendly feedback message.'),\n});\nexport type GenerateBudgetFeedbackOutput = z.infer<typeof GenerateBudgetFeedbackOutputSchema>;\n\nexport async function generateBudgetFeedback(\n  input: GenerateBudgetFeedbackInput\n): Promise<GenerateBudgetFeedbackOutput> {\n  return generateBudgetFeedbackFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateBudgetFeedbackPrompt',\n  input: { schema: GenerateBudgetFeedbackInputSchema },\n  output: { schema: GenerateBudgetFeedbackOutputSchema },\n  prompt: `Anda adalah seorang pemandu sorak keuangan yang menyenangkan dan sedikit unik untuk Gen Z dan orang tua muda.\nTujuan Anda adalah memberikan satu pesan umpan balik yang singkat dan menarik berdasarkan status anggaran mereka.\nBuat pesan kurang dari 15 kata. Gunakan emoji! ✨🎉💸\n\nHasilkan salah satu dari jenis pesan berikut berdasarkan statusnya:\n\n{{#if (eq status \"on_track\")}}\nHasilkan pesan yang memberi semangat untuk seseorang yang pengeluarannya masih jauh di bawah anggaran.\nContoh:\n- \"Anda seorang superstar anggaran! 🌟 Teruslah begitu!\"\n- \"Lihat dirimu, menabung seperti seorang pro. 🤑\"\n- \"Dompetmu berterima kasih padamu sekarang. 🙌\"\n- \"Hebat! Masih banyak ruang di anggaran.\"\n- \"Kerja bagus tetap sesuai jalur bulan ini! 🚀\"\n{{/if}}\n\n{{#if (eq status \"approaching_limit\")}}\nHasilkan peringatan lembut bahwa mereka mendekati batas pengeluaran mereka (lebih dari 50% terpakai).\nContoh:\n- \"Awas! Anda sudah menghabiskan setengah dari anggaran Anda. 🤔\"\n- \"Pengeluaran mulai meningkat. Tetap waspada! 🧐\"\n- \"Hanya pengingat ramah, Anda mendekati batas Anda.\"\n- \"Waktunya untuk sedikit lebih berhati-hati dengan pengeluaran. 🧘\"\n- \"Wah! Mari kita perlambat laju pengeluaran. 🚂\"\n{{/if}}\n\n{{#if (eq status \"at_limit\")}}\nHasilkan pesan yang menunjukkan bahwa mereka telah mencapai atau melebihi anggaran mereka. Pesan harus tegas tetapi tidak menghakimi.\nContoh:\n- \"Anda telah mencapai batas anggaran! Waktunya untuk tantangan tanpa belanja? 🛑\"\n- \"Anggaran habis! Mari kita tunda pengeluaran yang tidak penting. 🙅\"\n- \"Oke, pengeluaran berhenti di sini. Anda telah mencapai target Anda! 🏆\"\n- \"Misi selesai... Anda telah menghabiskan anggaran Anda. Waktunya berhenti sejenak. ⏸️\"\n- \"Anda telah mencapai garis finis untuk anggaran bulan ini! 🏁\"\n{{/if}}\n\nStatus Saat Ini: {{{status}}}\n`,\n});\n\nconst generateBudgetFeedbackFlow = ai.defineFlow(\n  {\n    name: 'generateBudgetFeedbackFlow',\n    inputSchema: GenerateBudgetFeedbackInputSchema,\n    outputSchema: GenerateBudgetFeedbackOutputSchema,\n  },\n  async input => {\n    const { output } = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAGA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,QAAQ,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAY;QAAqB;KAAW,EAAE,QAAQ,CAAC;AACzE;AAGA,MAAM,qCAAqC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClD,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAGO,eAAe,uBACpB,KAAkC;IAElC,OAAO,2BAA2B;AACpC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAE,QAAQ;IAAkC;IACnD,QAAQ;QAAE,QAAQ;IAAmC;IACrD,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCX,CAAC;AACD;AAEA,MAAM,6BAA6B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC9C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAChC,OAAO;AACT;;;IA3DoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/categorize-transaction.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Automatically categorizes transactions using AI based on the description.\n *\n * - categorizeTransaction - A function that categorizes a transaction.\n * - CategorizeTransactionInput - The input type for the categorizeTransaction function.\n * - CategorizeTransactionOutput - The return type for the categorizeTransaction function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst CategorizeTransactionInputSchema = z.object({\n  description: z.string().describe('The description of the transaction.'),\n});\nexport type CategorizeTransactionInput = z.infer<\n  typeof CategorizeTransactionInputSchema\n>;\n\nconst CategorizeTransactionOutputSchema = z.object({\n  category: z.string().describe('The predicted category of the transaction.'),\n});\nexport type CategorizeTransactionOutput = z.infer<\n  typeof CategorizeTransactionOutputSchema\n>;\n\nexport async function categorizeTransaction(\n  input: CategorizeTransactionInput\n): Promise<CategorizeTransactionOutput> {\n  return categorizeTransactionFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'categorizeTransactionPrompt',\n  input: {schema: CategorizeTransactionInputSchema},\n  output: {schema: CategorizeTransactionOutputSchema},\n  prompt: `Anda adalah seorang ahli keuangan pribadi. Tugas Anda adalah mengkategorikan transaksi berdasarkan deskripsinya.\n\n  Berikut adalah beberapa contoh kategori: \"Kebutuhan Pokok\", \"Restoran\", \"Sewa\", \"Gaji\", \"Utilitas\", \"Hiburan\", \"Transportasi\", \"Belanja\", \"Perjalanan\", \"Investasi\", \"Kesehatan\", \"Lainnya\".\n\n  Berdasarkan deskripsi, pilih hanya satu kategori.\n  Deskripsi: {{{description}}}`,\n});\n\nconst categorizeTransactionFlow = ai.defineFlow(\n  {\n    name: 'categorizeTransactionFlow',\n    inputSchema: CategorizeTransactionInputSchema,\n    outputSchema: CategorizeTransactionOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC;AAKA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAKO,eAAe,sBACpB,KAAiC;IAEjC,OAAO,0BAA0B;AACnC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAgC;IAChD,QAAQ;QAAC,QAAQ;IAAiC;IAClD,QAAQ,CAAC;;;;;8BAKmB,CAAC;AAC/B;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC7C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA3BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {analyzeSpending as '407c5cc1f5f96301c2acf9c10ac1270931d63cf92b'} from 'ACTIONS_MODULE0'\nexport {generateBudgetFeedback as '40c122e5ba2b95ce79d508f18045c80639422e4ad1'} from 'ACTIONS_MODULE1'\nexport {categorizeTransaction as '40522df4707e0c88fd616bea55129a9ce200aabbaa'} from 'ACTIONS_MODULE2'\n"],"names":[],"mappings":";AAAA;AACA;AACA","debugId":null}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/context/transactions-context.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TransactionsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TransactionsProvider() from the server but TransactionsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/transactions-context.tsx <module evaluation>\",\n    \"TransactionsProvider\",\n);\nexport const useTransactions = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTransactions() from the server but useTransactions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/transactions-context.tsx <module evaluation>\",\n    \"useTransactions\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,sEACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sEACA","debugId":null}},
    {"offset": {"line": 638, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/context/transactions-context.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TransactionsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TransactionsProvider() from the server but TransactionsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/transactions-context.tsx\",\n    \"TransactionsProvider\",\n);\nexport const useTransactions = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTransactions() from the server but useTransactions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/transactions-context.tsx\",\n    \"useTransactions\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,kDACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,kDACA","debugId":null}},
    {"offset": {"line": 656, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/logo.tsx"],"sourcesContent":["import React from 'react';\n\nconst Logo = () => {\n  return (\n    <div className=\"font-headline text-2xl font-bold tracking-tighter\">\n      <span className=\"text-primary\">Motion</span>\n      <span className=\"text-foreground\">Finance</span>\n    </div>\n  );\n};\n\nexport default Logo;\n"],"names":[],"mappings":";;;;;AAEA,MAAM,OAAO;IACX,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAK,WAAU;0BAAe;;;;;;0BAC/B,8OAAC;gBAAK,WAAU;0BAAkB;;;;;;;;;;;;AAGxC;uCAEe","debugId":null}},
    {"offset": {"line": 705, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/header.tsx"],"sourcesContent":["import React from 'react';\nimport Logo from '@/components/logo';\n\nconst Header = () => {\n  return (\n    <header className=\"sticky top-0 z-40 w-full border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"container flex h-16 items-center mx-auto px-4\">\n        <Logo />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,SAAS;IACb,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,0HAAA,CAAA,UAAI;;;;;;;;;;;;;;;AAIb;uCAEe","debugId":null}},
    {"offset": {"line": 740, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/dashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/dashboard/dashboard.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/dashboard.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 754, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/dashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/dashboard/dashboard.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/dashboard.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/transactions/transactions-view.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/transactions/transactions-view.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/transactions/transactions-view.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqT,GAClV,mFACA","debugId":null}},
    {"offset": {"line": 792, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/transactions/transactions-view.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/transactions/transactions-view.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/transactions/transactions-view.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 806, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { TransactionsProvider } from '@/context/transactions-context';\nimport Header from '@/components/layout/header';\nimport Dashboard from '@/components/dashboard/dashboard';\nimport TransactionsView from '@/components/transactions/transactions-view';\n\nexport default function Home() {\n  return (\n    <TransactionsProvider>\n      <div className=\"flex flex-col min-h-screen bg-background\">\n        <Header />\n        <main className=\"container mx-auto px-4 py-8 flex-grow\">\n          <div className=\"flex flex-col gap-12\">\n            <Dashboard />\n            <TransactionsView />\n          </div>\n        </main>\n      </div>\n    </TransactionsProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC,0IAAA,CAAA,uBAAoB;kBACnB,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,sIAAA,CAAA,UAAM;;;;;8BACP,8OAAC;oBAAK,WAAU;8BACd,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,4IAAA,CAAA,UAAS;;;;;0CACV,8OAAC,0JAAA,CAAA,UAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM7B","debugId":null}}]
}