{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/google-genai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,6KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/categorize-transaction.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Automatically categorizes transactions using AI based on the description.\n *\n * - categorizeTransaction - A function that categorizes a transaction.\n * - CategorizeTransactionInput - The input type for the categorizeTransaction function.\n * - CategorizeTransactionOutput - The return type for the categorizeTransaction function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst CategorizeTransactionInputSchema = z.object({\n  description: z.string().describe('The description of the transaction.'),\n});\nexport type CategorizeTransactionInput = z.infer<\n  typeof CategorizeTransactionInputSchema\n>;\n\nconst CategorizeTransactionOutputSchema = z.object({\n  category: z.string().describe('The predicted category of the transaction.'),\n});\nexport type CategorizeTransactionOutput = z.infer<\n  typeof CategorizeTransactionOutputSchema\n>;\n\nexport async function categorizeTransaction(\n  input: CategorizeTransactionInput\n): Promise<CategorizeTransactionOutput> {\n  return categorizeTransactionFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'categorizeTransactionPrompt',\n  input: {schema: CategorizeTransactionInputSchema},\n  output: {schema: CategorizeTransactionOutputSchema},\n  prompt: `You are a personal finance expert. Your task is to categorize transactions based on their description.\n\n  Here are some example categories: \"Groceries\", \"Restaurants\", \"Rent\", \"Salary\", \"Utilities\", \"Entertainment\", \"Transportation\", \"Shopping\", \"Travel\", \"Investments\", \"Healthcare\", \"Other\".\n\n  Based on the description, pick only one category.\n  Description: {{{description}}}`,\n});\n\nconst categorizeTransactionFlow = ai.defineFlow(\n  {\n    name: 'categorizeTransactionFlow',\n    inputSchema: CategorizeTransactionInputSchema,\n    outputSchema: CategorizeTransactionOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC;AAKA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAChC;AAKO,eAAe,sBACpB,KAAiC;IAEjC,OAAO,0BAA0B;AACnC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAgC;IAChD,QAAQ;QAAC,QAAQ;IAAiC;IAClD,QAAQ,CAAC;;;;;gCAKqB,CAAC;AACjC;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC7C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA3BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/analyze-spending.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Provides AI-powered analysis of spending habits.\n *\n * - analyzeSpending - A function that analyzes a list of transactions.\n * - AnalyzeSpendingInput - The input type for the analyzeSpending function.\n * - AnalyzeSpendingOutput - The return type for the analyzeSpending function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport type { Transaction } from '@/lib/types';\n\nconst TransactionSchema = z.object({\n  id: z.string(),\n  date: z.string(),\n  description: z.string(),\n  amount: z.number(),\n  type: z.enum(['income', 'expense']),\n  category: z.string(),\n});\n\nconst AnalyzeSpendingInputSchema = z.object({\n  transactions: z.array(TransactionSchema).describe('List of recent transactions.'),\n  totalIncome: z.number().describe('Total income for the period.'),\n  totalExpenses: z.number().describe('Total expenses for the period.'),\n});\nexport type AnalyzeSpendingInput = z.infer<typeof AnalyzeSpendingInputSchema>;\n\n\nconst AnalyzeSpendingOutputSchema = z.object({\n  insights: z.array(z.string()).describe('A list of 2-3 short, actionable insights based on the spending data.'),\n  cashflowMessage: z.string().describe('A brief, encouraging message about the user\\'s cash flow status.'),\n});\nexport type AnalyzeSpendingOutput = z.infer<typeof AnalyzeSpendingOutputSchema>;\n\nexport async function analyzeSpending(\n  input: AnalyzeSpendingInput\n): Promise<AnalyzeSpendingOutput> {\n  return analyzeSpendingFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'analyzeSpendingPrompt',\n  input: { schema: AnalyzeSpendingInputSchema },\n  output: { schema: AnalyzeSpendingOutputSchema },\n  prompt: `You are a friendly and encouraging financial advisor for Gen Z and busy parents.\nYour goal is to provide simple, actionable advice to help users manage their cash flow without stress. Avoid complex jargon.\nKeep your feedback positive and focus on small, achievable steps.\n\nAnalyze the user's recent transactions and financial summary.\n\n- Total Income: {{{totalIncome}}}\n- Total Expenses: {{{totalExpenses}}}\n- Transactions:\n{{#each transactions}}\n- {{{description}}} ({{category}}): \\${{{amount}}} on {{date}}\n{{/each}}\n\nBased on this data, provide:\n1.  **A cashflowMessage**: A one-sentence summary of their cash flow. If they are positive, be encouraging. If negative, be gentle and optimistic about improving.\n2.  **A list of insights**: 2 to 3 short (one sentence each), actionable insights. Focus on the largest spending categories or potential areas for savings. Frame them as helpful tips, not criticisms.\n\nExample Output:\n{\n  \"cashflowMessage\": \"You're in a great spot with more coming in than going out this month!\",\n  \"insights\": [\n    \"You're doing great at managing your 'Restaurants' spending.\",\n    \"A large portion of your spending is on 'Shopping', maybe look for deals next time?\",\n    \"Consider setting a small budget for 'Entertainment' to keep track of it.\"\n  ]\n}\n`,\n});\n\nconst analyzeSpendingFlow = ai.defineFlow(\n  {\n    name: 'analyzeSpendingFlow',\n    inputSchema: AnalyzeSpendingInputSchema,\n    outputSchema: AnalyzeSpendingOutputSchema,\n  },\n  async input => {\n    // Don't call the AI if there are no expenses\n    if (input.totalExpenses === 0) {\n      return {\n        cashflowMessage: \"You haven't logged any expenses yet. Once you do, I can provide some insights!\",\n        insights: [],\n      };\n    }\n    \n    const { output } = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAGA,MAAM,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM;IACZ,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM;IACrB,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM;IAChB,MAAM,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAU;KAAU;IAClC,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;AACpB;AAEA,MAAM,6BAA6B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,cAAc,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,mBAAmB,QAAQ,CAAC;IAClD,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACrC;AAIA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,UAAU,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;IACvC,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACvC;AAGO,eAAe,gBACpB,KAA2B;IAE3B,OAAO,oBAAoB;AAC7B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAE,QAAQ;IAA2B;IAC5C,QAAQ;QAAE,QAAQ;IAA4B;IAC9C,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BX,CAAC;AACD;AAEA,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACvC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,6CAA6C;IAC7C,IAAI,MAAM,aAAa,KAAK,GAAG;QAC7B,OAAO;YACL,iBAAiB;YACjB,UAAU,EAAE;QACd;IACF;IAEA,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAChC,OAAO;AACT;;;IAxDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {categorizeTransaction as '40522df4707e0c88fd616bea55129a9ce200aabbaa'} from 'ACTIONS_MODULE0'\nexport {analyzeSpending as '407c5cc1f5f96301c2acf9c10ac1270931d63cf92b'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/context/transactions-context.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TransactionsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TransactionsProvider() from the server but TransactionsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/transactions-context.tsx <module evaluation>\",\n    \"TransactionsProvider\",\n);\nexport const useTransactions = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTransactions() from the server but useTransactions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/transactions-context.tsx <module evaluation>\",\n    \"useTransactions\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,sEACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sEACA","debugId":null}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/context/transactions-context.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TransactionsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call TransactionsProvider() from the server but TransactionsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/transactions-context.tsx\",\n    \"TransactionsProvider\",\n);\nexport const useTransactions = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTransactions() from the server but useTransactions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/transactions-context.tsx\",\n    \"useTransactions\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,kDACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,kDACA","debugId":null}},
    {"offset": {"line": 552, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/logo.tsx"],"sourcesContent":["import React from 'react';\n\nconst Logo = () => {\n  return (\n    <div className=\"font-headline text-2xl font-bold tracking-tighter\">\n      <span className=\"text-primary\">Motion</span>\n      <span className=\"text-foreground\">Finance</span>\n    </div>\n  );\n};\n\nexport default Logo;\n"],"names":[],"mappings":";;;;;AAEA,MAAM,OAAO;IACX,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAK,WAAU;0BAAe;;;;;;0BAC/B,8OAAC;gBAAK,WAAU;0BAAkB;;;;;;;;;;;;AAGxC;uCAEe","debugId":null}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/header.tsx"],"sourcesContent":["import React from 'react';\nimport Logo from '@/components/logo';\n\nconst Header = () => {\n  return (\n    <header className=\"sticky top-0 z-40 w-full border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"container flex h-16 items-center mx-auto px-4\">\n        <Logo />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,SAAS;IACb,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,0HAAA,CAAA,UAAI;;;;;;;;;;;;;;;AAIb;uCAEe","debugId":null}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/dashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/dashboard/dashboard.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/dashboard.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/dashboard.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/dashboard/dashboard.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/dashboard.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/transactions/transactions-view.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/transactions/transactions-view.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/transactions/transactions-view.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqT,GAClV,mFACA","debugId":null}},
    {"offset": {"line": 688, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/transactions/transactions-view.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/transactions/transactions-view.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/transactions/transactions-view.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAiS,GAC9T,+DACA","debugId":null}},
    {"offset": {"line": 702, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 712, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/context/financial-health-context.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FinancialHealthProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call FinancialHealthProvider() from the server but FinancialHealthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/financial-health-context.tsx <module evaluation>\",\n    \"FinancialHealthProvider\",\n);\nexport const useFinancialHealth = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFinancialHealth() from the server but useFinancialHealth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/financial-health-context.tsx <module evaluation>\",\n    \"useFinancialHealth\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,0EACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,0EACA","debugId":null}},
    {"offset": {"line": 730, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/context/financial-health-context.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FinancialHealthProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call FinancialHealthProvider() from the server but FinancialHealthProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/financial-health-context.tsx\",\n    \"FinancialHealthProvider\",\n);\nexport const useFinancialHealth = registerClientReference(\n    function() { throw new Error(\"Attempted to call useFinancialHealth() from the server but useFinancialHealth is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/financial-health-context.tsx\",\n    \"useFinancialHealth\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,0BAA0B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzD;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,sDACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,sDACA","debugId":null}},
    {"offset": {"line": 748, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { TransactionsProvider } from '@/context/transactions-context';\nimport Header from '@/components/layout/header';\nimport Dashboard from '@/components/dashboard/dashboard';\nimport TransactionsView from '@/components/transactions/transactions-view';\nimport { FinancialHealthProvider } from '@/context/financial-health-context';\n\nexport default function Home() {\n  return (\n    <TransactionsProvider>\n      <FinancialHealthProvider>\n        <div className=\"flex flex-col min-h-screen bg-background\">\n          <Header />\n          <main className=\"container mx-auto px-4 py-8 flex-grow\">\n            <div className=\"flex flex-col gap-12\">\n              <Dashboard />\n              <TransactionsView />\n            </div>\n          </main>\n        </div>\n      </FinancialHealthProvider>\n    </TransactionsProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC,0IAAA,CAAA,uBAAoB;kBACnB,cAAA,8OAAC,iJAAA,CAAA,0BAAuB;sBACtB,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,sIAAA,CAAA,UAAM;;;;;kCACP,8OAAC;wBAAK,WAAU;kCACd,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,4IAAA,CAAA,UAAS;;;;;8CACV,8OAAC,0JAAA,CAAA,UAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO/B","debugId":null}}]
}